---
metadata:
  title: Study Duration Deadline Calculator
  short title: Study Deadline
  description: Calculate the maximum duration of studies based on registration date, study program, part-time status, interruptions, and exceptions.
---

---
mandatory: True
code: |
  # Final output
  final_deadline_message
---

---
question: |
  What is the date of your first registration?
subquestion: |
  Please enter the date when you first enrolled in the study program (e.g., 01/09/2020).
fields:
  - "Registration Date": registration_date
    datatype: date
    required: True
---

---
question: |
  What is the minimum duration of your study program?
subquestion: |
  Enter the minimum duration of your study program in academic semesters (e.g., 8 for a 4-year bachelor's degree).
fields:
  - "Minimum Semesters": min_semesters
    datatype: integer
    min: 1
    required: True
---

---
code: |
  # Step 2: Determine minimum duration
  min_years = min_semesters / 2  # Convert semesters to years

  # Step 3: Calculate maximum duration
  if min_semesters <= 8:
    max_semesters = 12  # 8 + 4 semesters
  else:
    max_semesters = min_semesters + 6  # Minimum + 6 semesters
  max_years = max_semesters / 2  # Convert to years
---

---
question: |
  Are you a part-time student?
subquestion: |
  You qualify as a part-time student if you work 20+ hours/week, have a disability, or have athletic distinctions.
fields:
  - "Part-time Status": is_part_time
    datatype: yesno
---

---
code: |
  # Step 4: Adjust for part-time status
  if is_part_time:
    max_semesters = max_semesters * 2  # Double the semesters
    max_years = max_semesters / 2
  else:
    max_semesters = max_semesters  # No change
    max_years = max_years
---

---
question: |
  Have you interrupted your studies?
subquestion: |
  If yes, please indicate the total duration of the interruption in years (max 2 years allowed).
fields:
  - "Interrupted Studies": has_interruption
    datatype: yesno
  - "Interruption Duration (in years)": interruption_years
    datatype: number
    min: 0
    max: 2
    show if:
      variable: has_interruption
      is: True
    default: 0
---

---
code: |
  # Step 5: Adjust for interruption
  if has_interruption and interruption_years <= 2:
    total_max_years = max_years + interruption_years
    total_max_semesters = max_semesters + (interruption_years * 2)
  else:
    total_max_years = max_years
    total_max_semesters = max_semesters
---

---
question: |
  Do you have a serious health reason for an extension?
subquestion: |
  This applies to serious health issues for yourself or a first-degree relative, as per university regulations.
fields:
  - "Health Exception": has_health_exception
    datatype: yesno
  - "Extension Duration (in years)": health_extension_years
    datatype: number
    min: 0
    show if:
      variable: has_health_exception
      is: True
    default: 0
---

---
code: |
  # Step 6: Adjust for health exception
  if has_health_exception and health_extension_years > 0:
    total_max_years = total_max_years + health_extension_years
    total_max_semesters = total_max_semesters + (health_extension_years * 2)
  else:
    total_max_years = total_max_years
    total_max_semesters = total_max_semesters

  # Calculate final deadline
  from datetime import datetime
  from dateutil.relativedelta import relativedelta
  final_deadline = registration_date + relativedelta(years=int(total_max_years))
---

---
question: |
  Your Study Duration Deadline
subquestion: |
  Based on the information provided:

  - **First Registration Date**: ${ registration_date }
  - **Minimum Duration**: ${ min_semesters } semesters (${ min_years } years)
  - **Maximum Duration**: ${ total_max_semesters } semesters (${ total_max_years } years)
  - **Final Deadline**: ${ final_deadline.strftime('%d/%m/%Y') }

  If you exceed this deadline, you may be subject to deregistration by the Department or Dean's Office.
buttons:
  - Exit: exit
  - Restart: restart
sets: final_deadline_message
---